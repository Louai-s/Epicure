{"ast":null,"code":"var _jsxFileName = \"/Users/louaisalem/epicure/src/components/Body/PopularRestaurants/DesktopAllRestaurants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Allrestaurants } from '../../../interfaces/Restaurant';\nimport { RestaurantImg, RestaurantName } from '../ChefOfTheWeek/StyleChefDetails';\nimport { DesktopAllRestsContainer, DesktopRestauranDiv, RestaurantStatus, RestChefName, StarsImg, StatusSelector } from './StylePopularRests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DesktopAllRestaurants() {\n  _s();\n\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n  const [allBtnisActive, setAllIsActive] = useState(true);\n  const [newBtnisActive, setNewIsActive] = useState(false);\n  const [popularBtnisActive, setPopularIsActive] = useState(false);\n  const [openBtnisActive, setOpenIsActive] = useState(false);\n  const [MapBtnisActive, setMapIsActive] = useState(false);\n\n  const filterRests = status => {\n    const filtered = Allrestaurants.filter(restaurant => restaurant.Status.includes(status));\n    setFilteredRestaurants(filtered);\n  };\n\n  function MakeAllActive() {\n    setAllIsActive(true);\n    setNewIsActive(false);\n    setPopularIsActive(false);\n    setOpenIsActive(false);\n    setMapIsActive(false);\n  }\n\n  function MakeNewActive() {\n    setAllIsActive(false);\n    setNewIsActive(true);\n    setPopularIsActive(false);\n    setOpenIsActive(false);\n    setMapIsActive(false);\n  }\n\n  function MakePopularActive() {\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setPopularIsActive(true);\n    setOpenIsActive(false);\n    setMapIsActive(false);\n  }\n\n  function MakeOpenActive() {\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setPopularIsActive(false);\n    setOpenIsActive(true);\n    setMapIsActive(false);\n  }\n\n  function MapViewActive() {\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setPopularIsActive(false);\n    setOpenIsActive(false);\n    setMapIsActive(true);\n  }\n\n  useEffect(() => {\n    filterRests(\"All\");\n    setAllIsActive(true);\n  }, []);\n  const ref = React.useRef(null);\n  const [map, setMap] = React.useState();\n  React.useEffect(() => {\n    if (ref.current && !map) {\n      setMap(new window.google.maps.Map(ref.current, {}));\n    }\n  }, [ref, map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatusSelector, {\n      Mobile: false,\n      children: [/*#__PURE__*/_jsxDEV(RestaurantStatus, {\n        underline: allBtnisActive,\n        onClick: () => {\n          filterRests(\"All\");\n          MakeAllActive();\n        },\n        children: \" All \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n        underline: newBtnisActive,\n        onClick: () => {\n          filterRests(\"New\");\n          MakeNewActive();\n        },\n        children: \" New \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n        underline: popularBtnisActive,\n        onClick: () => {\n          filterRests(\"Most Popular\");\n          MakePopularActive();\n        },\n        children: \" Most Popular \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n        underline: openBtnisActive,\n        onClick: () => {\n          filterRests(\"Open now\");\n          MakeOpenActive();\n        },\n        children: \" Open Now \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n        underline: MapBtnisActive,\n        onClick: () => {\n          filterRests(\"Map View\");\n          MapViewActive();\n        },\n        children: \" Map View \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DesktopAllRestsContainer, {\n      children: filteredRestaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(DesktopRestauranDiv, {\n        children: [/*#__PURE__*/_jsxDEV(RestaurantImg, {\n          src: restaurant.PictureURL,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(RestaurantName, {\n          Mobile: false,\n          children: [\" \", restaurant.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(RestChefName, {\n          Mobile: false,\n          children: restaurant.ChefName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(StarsImg, {\n          src: restaurant.stars,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DesktopAllRestaurants, \"5OhmHvK491NqA/ux2x/XUA5HIyk=\");\n\n_c = DesktopAllRestaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopAllRestaurants\");","map":{"version":3,"names":["React","useEffect","useState","Allrestaurants","RestaurantImg","RestaurantName","DesktopAllRestsContainer","DesktopRestauranDiv","RestaurantStatus","RestChefName","StarsImg","StatusSelector","DesktopAllRestaurants","filteredRestaurants","setFilteredRestaurants","allBtnisActive","setAllIsActive","newBtnisActive","setNewIsActive","popularBtnisActive","setPopularIsActive","openBtnisActive","setOpenIsActive","MapBtnisActive","setMapIsActive","filterRests","status","filtered","filter","restaurant","Status","includes","MakeAllActive","MakeNewActive","MakePopularActive","MakeOpenActive","MapViewActive","ref","useRef","map","setMap","current","window","google","maps","Map","index","PictureURL","name","ChefName","stars"],"sources":["/Users/louaisalem/epicure/src/components/Body/PopularRestaurants/DesktopAllRestaurants.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Allrestaurants, Restaurant } from '../../../interfaces/Restaurant';\nimport { RestaurantDiv, RestaurantImg, RestaurantName } from '../ChefOfTheWeek/StyleChefDetails';\nimport { DesktopAllRestsContainer, DesktopRestauranDiv, RestaurantStatus, RestChefName, StarsImg, StatusSelector, TitleR } from './StylePopularRests';\nimport { Wrapper, Status } from \"@googlemaps/react-wrapper\";\nexport default function DesktopAllRestaurants() {\n    const [filteredRestaurants, setFilteredRestaurants] = useState<Restaurant[]>([]);\n  const [allBtnisActive, setAllIsActive] = useState(true);\n  const [newBtnisActive, setNewIsActive] = useState(false);\n  const [popularBtnisActive, setPopularIsActive] = useState(false);\n  const [openBtnisActive, setOpenIsActive] = useState(false);\n  const [MapBtnisActive, setMapIsActive] = useState(false);\n  \n  const filterRests = (status: string) => {\n    const filtered = Allrestaurants.filter(restaurant => restaurant.Status.includes(status));\n    setFilteredRestaurants(filtered);\n  }\n\n  function MakeAllActive(){\n    setAllIsActive(true);\n    setNewIsActive(false);\n    setPopularIsActive(false);\n    setOpenIsActive(false);\n    setMapIsActive(false);\n    \n  }\n\n  function MakeNewActive(){\n    setAllIsActive(false);\n    setNewIsActive(true);\n    setPopularIsActive(false);\n    setOpenIsActive(false);\n    setMapIsActive(false);\n  }\n\n  function MakePopularActive(){\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setPopularIsActive(true);\n    setOpenIsActive(false);\n    setMapIsActive(false);\n  }\n\n  function MakeOpenActive(){\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setPopularIsActive(false);\n    setOpenIsActive(true);\n    setMapIsActive(false);\n  }\n  function MapViewActive(){\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setPopularIsActive(false);\n    setOpenIsActive(false);\n    setMapIsActive(true);\n  }\n  \n  \n  useEffect(() => {\n    filterRests(\"All\");\n    setAllIsActive(true);\n  }, []);\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [map, setMap] = React.useState<google.maps.Map>();\n  \n  React.useEffect(() => {\n    if (ref.current && !map) {\n      setMap(new window.google.maps.Map(ref.current, {}));\n    }\n  }, [ref, map]);\n\n  return (\n    <div>\n        \n        <StatusSelector Mobile={false}>\n            <RestaurantStatus underline={allBtnisActive} onClick={() =>{filterRests(\"All\");\n             MakeAllActive() }}> All </RestaurantStatus>\n\n            <RestaurantStatus underline={newBtnisActive}  onClick={() => {filterRests(\"New\");\n            MakeNewActive()} }> New </RestaurantStatus>\n\n            <RestaurantStatus underline={popularBtnisActive} onClick={() => {filterRests(\"Most Popular\");MakePopularActive()}}> Most Popular </RestaurantStatus>\n\n            <RestaurantStatus underline={openBtnisActive}  onClick={() => {filterRests(\"Open now\"); MakeOpenActive()}}> Open Now </RestaurantStatus>\n\n            <RestaurantStatus underline={MapBtnisActive}  onClick={() => {filterRests(\"Map View\"); MapViewActive()}}> Map View </RestaurantStatus>\n        </StatusSelector>\n        \n        <DesktopAllRestsContainer>\n        {filteredRestaurants.map((restaurant:Restaurant , index)=>(\n                  <DesktopRestauranDiv key={index} > \n                      <RestaurantImg src={restaurant.PictureURL} alt=''/>\n                      <RestaurantName Mobile={false}> {restaurant.name}</RestaurantName>\n                      <RestChefName Mobile={false}>{restaurant.ChefName}</RestChefName>\n                      <StarsImg src={restaurant.stars} alt=''/>\n                  </DesktopRestauranDiv>))}\n        </DesktopAllRestsContainer>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}