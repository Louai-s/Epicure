{"ast":null,"code":"var _jsxFileName = \"/Users/louaisalem/epicure/src/components/Body/PopularRestaurants/OneRestaurant.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RestaurantDiv, RestaurantImg, RestaurantName } from '../ChefOfTheWeek/StyleChefDetails';\nimport { AllRestaurantsContainerMobile, RestaurantStatus, RestChefName, StatusSelector } from './StylePopularRests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OneRestaurant() {\n  _s();\n\n  const AllRestaurants = useSelector(state => state.restaurants.value);\n  const restaurantID = useSelector(state => state.restmoreinfo.value);\n  const Dishes = useSelector(state => state.dishes.value);\n  console.log(Dishes);\n  const OneRestaurant = AllRestaurants.filter(restaurant => restaurant._id === restaurantID)[0];\n  var today = new Date(),\n      time = today.getHours();\n  var openingTime = OneRestaurant.openingHours[0];\n  const openingHour = openingTime.split(\":\")[0];\n  var closingTime = OneRestaurant.openingHours[1];\n  const closingHour = closingTime.split(\":\")[0];\n  const [RestaurantOpeningStatus, setRestaurantStatus] = useState(\"\");\n  useEffect(() => {\n    if (time > Number(openingHour) && time < Number(closingHour)) {\n      setRestaurantStatus(\"Open Now\");\n    } else {\n      setRestaurantStatus(\"Closed\");\n    }\n  }, []);\n  console.log(RestaurantOpeningStatus);\n\n  function dishOBJ(id) {\n    return Dishes.filter(dish => dish._id === id)[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RestaurantDiv, {\n      Mobile: true,\n      children: [/*#__PURE__*/_jsxDEV(RestaurantImg, {\n        src: OneRestaurant.pictureURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantName, {\n        Mobile: true,\n        children: [\" \", OneRestaurant.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestChefName, {\n        Mobile: true,\n        children: OneRestaurant.chef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantName, {\n        Mobile: true,\n        children: [\" \", RestaurantOpeningStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AllRestaurantsContainerMobile, {\n      children: [/*#__PURE__*/_jsxDEV(StatusSelector, {\n        Mobile: true,\n        children: [/*#__PURE__*/_jsxDEV(RestaurantStatus, {\n          underline: true,\n          children: \" Breakfast \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n          underline: true,\n          children: \" Launch \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n          underline: true,\n          children: \" Dinner \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), OneRestaurant.dishes.map((dish, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dishOBJ(dish).dishType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OneRestaurant, \"PUCVo4PsSKDbtdDyjZEXAPqQsLo=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = OneRestaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneRestaurant\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","RestaurantDiv","RestaurantImg","RestaurantName","AllRestaurantsContainerMobile","RestaurantStatus","RestChefName","StatusSelector","OneRestaurant","AllRestaurants","state","restaurants","value","restaurantID","restmoreinfo","Dishes","dishes","console","log","filter","restaurant","_id","today","Date","time","getHours","openingTime","openingHours","openingHour","split","closingTime","closingHour","RestaurantOpeningStatus","setRestaurantStatus","Number","dishOBJ","id","dish","pictureURL","name","chef","map","index","dishType"],"sources":["/Users/louaisalem/epicure/src/components/Body/PopularRestaurants/OneRestaurant.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { RestaurantDiv, RestaurantImg, RestaurantName } from '../ChefOfTheWeek/StyleChefDetails';\nimport { AllRestaurantsContainerMobile, RestaurantStatus, RestChefName, StatusSelector } from './StylePopularRests';\n\nexport default function OneRestaurant() {\n    const AllRestaurants = useSelector((state:any) => state.restaurants.value);\n    const restaurantID = useSelector((state:any) => state.restmoreinfo.value);\n    const Dishes = useSelector((state:any) => state.dishes.value);\n    console.log(Dishes);\n    const OneRestaurant = AllRestaurants.filter((restaurant:any) => restaurant._id===(restaurantID))[0]\n\n    var today = new Date(),\n    time = today.getHours();\n    var openingTime = OneRestaurant.openingHours[0];\n    const openingHour = openingTime.split(\":\")[0];\n    var closingTime = OneRestaurant.openingHours[1];\n    const closingHour = closingTime.split(\":\")[0];\n\n    const [RestaurantOpeningStatus,setRestaurantStatus] = useState(\"\");\n    useEffect(()=>{\n    if(time > Number(openingHour) && time < Number(closingHour)){\n      setRestaurantStatus(\"Open Now\");}\n    else{\n      setRestaurantStatus(\"Closed\");}\n  }, []);\n    console.log(RestaurantOpeningStatus);\n\n    function dishOBJ(id:string){\n      return Dishes.filter((dish:any) => dish._id===(id))[0];\n    }\n    \n  return (\n    <div>\n        <RestaurantDiv Mobile={true} >\n            <RestaurantImg src={OneRestaurant.pictureURL} alt=''/>\n            <RestaurantName Mobile={true}> {OneRestaurant.name}</RestaurantName>\n            <RestChefName Mobile={true}>{OneRestaurant.chef}</RestChefName>\n            <RestaurantName Mobile={true}> {RestaurantOpeningStatus}</RestaurantName>\n        </RestaurantDiv>\n        <AllRestaurantsContainerMobile>\n          <StatusSelector Mobile={true}>\n            <RestaurantStatus underline= {true} > Breakfast </RestaurantStatus>\n\n            <RestaurantStatus underline= {true}> Launch </RestaurantStatus>\n\n            <RestaurantStatus underline= {true}> Dinner </RestaurantStatus>\n          </StatusSelector>\n          {OneRestaurant.dishes.map((dish:any,index:any)=>(\n          <div>\n              <p>{dishOBJ(dish).dishType}</p>\n            </div>\n            ))}\n      </AllRestaurantsContainerMobile>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}