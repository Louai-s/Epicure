{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport restaurantsReducer from './components/Slicers/restaurantsSlicer';\nimport chefsReducer from './components/Slicers/chefsSlicer';\nimport dishesReducer from './components/Slicers/dishesSlicer';\n// const serviceApi = createServiceApi('/some/url');\nexport default configureStore({\n  reducer: {\n    restaurants: restaurantsReducer,\n    chefs: chefsReducer,\n    dishes: dishesReducer\n  } // middleware: getDefaultMiddleware =>\n  // getDefaultMiddleware()\n\n});","map":{"version":3,"names":["configureStore","restaurantsReducer","chefsReducer","dishesReducer","reducer","restaurants","chefs","dishes"],"sources":["/Users/louaisalem/epicure/src/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport restaurantsReducer from './components/Slicers/restaurantsSlicer';\nimport chefsReducer from './components/Slicers/chefsSlicer';\nimport dishesReducer from './components/Slicers/dishesSlicer';\nimport storage from 'redux-persist/es/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\n// const serviceApi = createServiceApi('/some/url');\n\nexport default configureStore({\n  reducer: {\n      restaurants: restaurantsReducer,\n      chefs: chefsReducer,\n      dishes: dishesReducer,\n  },\n  // middleware: getDefaultMiddleware =>\n  // getDefaultMiddleware()\n})\n\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAGA;AAEA,eAAeH,cAAc,CAAC;EAC5BI,OAAO,EAAE;IACLC,WAAW,EAAEJ,kBADR;IAELK,KAAK,EAAEJ,YAFF;IAGLK,MAAM,EAAEJ;EAHH,CADmB,CAM5B;EACA;;AAP4B,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}