{"ast":null,"code":"var _jsxFileName = \"/Users/louaisalem/epicure/src/components/Body/Chefs/AllChefs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport SetWindowSize from '../../../Helpers/SetWindowSize';\nimport store from '../../../store';\nimport { setChefs } from '../../Slicers/chefsSlicer';\nimport { ChefName, PicName } from '../ChefOfTheWeek/StyleChefDetails';\nimport { AllRestaurantsContainerMobile, RestaurantStatus, StatusSelector, TitleR } from '../PopularRestaurants/StylePopularRests';\nimport { ChefDiv } from './StyleChef';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllChefs() {\n  _s();\n\n  const filterChefs = status => {\n    const filtered = chefs.filter(chef => chef.chefStatus.includes(status));\n    setFilteredChefs(filtered);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('http://localhost:3001/api/chefs/getChefs');\n      const jsonData = await result.json();\n      setFilteredChefs(jsonData); // render first time restaurants. ??\n\n      setAllChefs(jsonData); // Load All Restaurants into Variable.\n    };\n\n    fetchData();\n    filterChefs(\"All\");\n    setAllIsActive(true);\n  }, []);\n  const [ALLCHEFS, setAllChefs] = useState([]);\n  const [filteredChefs, setFilteredChefs] = useState([]);\n  const [allBtnisActive, setAllIsActive] = useState(true);\n  const [newBtnisActive, setNewIsActive] = useState(false);\n  const [ViewedBtnisActive, setMostViewedIsActive] = useState(false);\n  store.dispatch(setChefs(ALLCHEFS));\n  const chefs = useSelector(state => state.chefs.value);\n\n  function MakeAllActive() {\n    setAllIsActive(true);\n    setNewIsActive(false);\n    setMostViewedIsActive(false);\n  }\n\n  function MakeNewActive() {\n    setAllIsActive(false);\n    setNewIsActive(true);\n    setMostViewedIsActive(false);\n  }\n\n  function MakeMostViewedActive() {\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setMostViewedIsActive(true);\n  }\n\n  const windowSize = SetWindowSize();\n  const [MobileFlag, setMobileFlag] = useState(true);\n\n  function notify() {\n    toast.success(\"(New) Button Was Clicked!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AllRestaurantsContainerMobile, {\n      children: [/*#__PURE__*/_jsxDEV(TitleR, {\n        children: \" Chefs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: notify,\n        children: \" Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatusSelector, {\n        Mobile: true,\n        children: [/*#__PURE__*/_jsxDEV(RestaurantStatus, {\n          underline: allBtnisActive,\n          onClick: () => {\n            filterChefs(\"All\");\n            MakeAllActive();\n          },\n          children: \" All \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n          underline: newBtnisActive,\n          onClick: () => {\n            filterChefs(\"New\");\n            MakeNewActive();\n          },\n          children: \" New \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RestaurantStatus, {\n          underline: ViewedBtnisActive,\n          onClick: () => {\n            filterChefs(\"Most Viewed\");\n            MakeMostViewedActive();\n          },\n          children: \" Most Viewed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), filteredChefs.map((chef, index) => /*#__PURE__*/_jsxDEV(ChefDiv, {\n      Mobile: MobileFlag,\n      children: [/*#__PURE__*/_jsxDEV(PicName, {\n        Background: chef.pictureURL,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(ChefName, {\n            children: [\" \", chef.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 36\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 47\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllChefs, \"KyzDjkgwxmhjWVf/IEMZIEnQtQo=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllChefs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllChefs\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","SetWindowSize","store","setChefs","ChefName","PicName","AllRestaurantsContainerMobile","RestaurantStatus","StatusSelector","TitleR","ChefDiv","toast","AllChefs","filterChefs","status","filtered","chefs","filter","chef","chefStatus","includes","setFilteredChefs","fetchData","result","fetch","jsonData","json","setAllChefs","setAllIsActive","ALLCHEFS","filteredChefs","allBtnisActive","newBtnisActive","setNewIsActive","ViewedBtnisActive","setMostViewedIsActive","dispatch","state","value","MakeAllActive","MakeNewActive","MakeMostViewedActive","windowSize","MobileFlag","setMobileFlag","notify","success","map","index","pictureURL","name"],"sources":["/Users/louaisalem/epicure/src/components/Body/Chefs/AllChefs.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport SetWindowSize from '../../../Helpers/SetWindowSize';\nimport { allChefs, Chef } from '../../../interfaces/Chef'\nimport store from '../../../store';\nimport { setChefs } from '../../Slicers/chefsSlicer';\nimport { ChefName, PicName } from '../ChefOfTheWeek/StyleChefDetails'\nimport { AllRestaurantsContainerMobile, RestaurantStatus, StatusSelector, TitleR } from '../PopularRestaurants/StylePopularRests';\nimport { ChefDiv } from './StyleChef';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function AllChefs() {\n  \n  const filterChefs = (status: string) => {\n    const filtered = chefs.filter((chef:Chef) => chef.chefStatus.includes(status));\n    setFilteredChefs(filtered);\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('http://localhost:3001/api/chefs/getChefs');\n      const jsonData = await result.json();\n      setFilteredChefs(jsonData); // render first time restaurants. ??\n      setAllChefs(jsonData) // Load All Restaurants into Variable.\n      }\n      fetchData();\n      filterChefs(\"All\");\n      setAllIsActive(true);\n      \n  }, []);\n\n\n  const [ALLCHEFS,setAllChefs] = useState<Chef[]>([]);\n  const [filteredChefs, setFilteredChefs] = useState<Chef[]>([]);\n  const [allBtnisActive, setAllIsActive] = useState(true);\n  const [newBtnisActive, setNewIsActive] = useState(false);\n  const [ViewedBtnisActive, setMostViewedIsActive] = useState(false);\n  store.dispatch(setChefs(ALLCHEFS));\n  const chefs = useSelector((state:any) => state.chefs.value);\n\n  function MakeAllActive(){\n    setAllIsActive(true);\n    setNewIsActive(false);\n    setMostViewedIsActive(false);\n  }\n\n  function MakeNewActive(){\n    setAllIsActive(false);\n    setNewIsActive(true);\n    setMostViewedIsActive(false);\n  }\n\n  function MakeMostViewedActive(){\n    setAllIsActive(false);\n    setNewIsActive(false);\n    setMostViewedIsActive(true);\n  }\n  \n    const windowSize = SetWindowSize();\n    const [MobileFlag, setMobileFlag] = useState(true);\n\n   \n      \n      function notify(){\n        toast.success(\"(New) Button Was Clicked!\");\n      }\n\n\n  return (\n    \n    <div>\n        \n        <AllRestaurantsContainerMobile>\n            <TitleR> Chefs </TitleR>\n            <button onClick={notify}> Click</button>\n            <StatusSelector Mobile={true}>\n                <RestaurantStatus underline={allBtnisActive} onClick={() =>{filterChefs(\"All\");\n                MakeAllActive()}}> All </RestaurantStatus>\n\n                <RestaurantStatus underline={newBtnisActive}  onClick={() => {filterChefs(\"New\");\n                MakeNewActive();}}> New </RestaurantStatus>\n\n                <RestaurantStatus underline={ViewedBtnisActive} onClick={() => {filterChefs(\"Most Viewed\");\n                MakeMostViewedActive()}}> Most Viewed </RestaurantStatus>\n\n            </StatusSelector>\n        </AllRestaurantsContainerMobile>\n\n        {filteredChefs.map((chef:any,index)=>(\n                  <ChefDiv Mobile={MobileFlag} key={index} > \n                      <PicName Background={chef.pictureURL}>\n                        <b><ChefName> {chef.name}</ChefName></b>\n                        </PicName> <br/> <br/><br/>\n                  </ChefDiv>\n                  ))}\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}